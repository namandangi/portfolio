{"componentChunkName":"component---src-pages-archive-js","path":"/archive/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"2024-02-01","title":"Real-time Analytics on spatial images","tech":["Python","React.js","Dash","Computer Vision","OpenCV","Matplotlib","RabbitMQ","Celery"],"github":"https://github.com/namandangi/OSD-Analysis","external":"","ios":"","android":"","company":"Research"},"html":"<p>Indexed image annotations as vector embeddings in PostGIS to speed up spatial queries and visualized large volumes of data in real-time using RabbitMQ and Celery.</p>"}},{"node":{"frontmatter":{"date":"2023-10-31","title":"Recipe Recommender","tech":["Python","JavaScript","React.js","PostgreSQL","Elastic Search","Logstash","Recommender Systems","ETL","Scikit-learn"],"github":null,"external":"","ios":"","android":"","company":""},"html":"<p>Implemented ETL data pipelines with Elastic Search and Logstash for recipe recommendation by combining data from over 30,000 Walmart products and over 200,000 Food.com recipes and engineered reverse image search by indexing image embeddings and built a recommendation system.</p>"}},{"node":{"frontmatter":{"date":"2023-10-31","title":"Online market place for ewaste with Generative AI","tech":["User Interviews","Usability Testing","Prototyping","Concept Sketching","Interface Design","Figma"],"github":null,"external":"https://www.figma.com/proto/d89h7H9N4vJR2JTZwQMmA1/Creative-Reuse?node-id=0-1&fuid=893008489153526793","ios":"","android":"","company":"Georgia Tech"},"html":"<p>Designed an online marketplace for electronic waste items and a project recommender for suggesting DIY projects based on it. Leveraged the use of generative AI to create descriptions for product listings and to recommend DIY project tutorials.</p>"}},{"node":{"frontmatter":{"date":"2023-01-01","title":"Auto Registration of spatial images","tech":["Python","React.js","Dash","Computer Vision","OpenCV","Matplotlib"],"github":"https://github.com/namandangi/osdAutoRegistration","external":"","ios":"","android":"","company":"Research"},"html":"<p>Auto-registration of whole-slide images utilizing ORB and AKAZE feature detection, coupled with KNN and Hamming matching\nalgorithms for calculating the required homography to compute anchor points.</p>"}},{"node":{"frontmatter":{"date":"2022-08-31","title":"Barrier Synchronization","tech":["C","Multithreading","Valgrind","GDB","OpenMP","MPI"],"github":null,"external":"","ios":"","android":"","company":"Georgia Tech"},"html":"<p>Implemented barrier synchronization algorithms based on the paper “Algorithms for Scalable Synchronization on Shared-Memory Multiprocessors” including tree-based, dissemination, and counting barriers with sense reversal.</p>"}},{"node":{"frontmatter":{"date":"2022-08-31","title":"Buffer Manager System","tech":["C++","Multithreading","Valgrind","GDB"],"github":null,"external":"","ios":"","android":"","company":"Georgia Tech"},"html":"<p>Built a thread-safe buffer manager system that implements the scan-resistant 2Q replacement strategy and is capable of handling over 40,000 concurrent page fix and unfix operations across 8 threads. </p>"}},{"node":{"frontmatter":{"date":"2022-08-31","title":"CPU Scheduler","tech":["C++","Multithreading","Valgrind","GDB","Libvirt","Qemu","KVM"],"github":null,"external":"","ios":"","android":"","company":"Georgia Tech"},"html":"<p>Implemented a CPU Scheduler to balance the pining of virtual CPUs to physical CPUs. Implemented round-robing algorithm to handle pining of 8 VMs across 4 pCPUs based on their utilization to reach a balanced load. </p>"}},{"node":{"frontmatter":{"date":"2022-08-31","title":"Memory Manager","tech":["C++","Multithreading","Valgrind","GDB","Libvirt","Qemu","KVM"],"github":null,"external":"","ios":"","android":"","company":"Georgia Tech"},"html":"<p>Designed a Memory Manager to handle the inflation and deflation of the balloon driver across 4 VMs based on the memory utilization of the host machine and guest machines in each cycle.</p>"}},{"node":{"frontmatter":{"date":"2020-10-15","title":"Whole Slide Image preprocessing, segmentation, lymphocyte count & localization","tech":["Python","Numpy","Tensorflow","Keras","OpenCV","OpenSlide","Pilow"],"github":"https://github.com/namandangi/wsi","external":"","ios":"","android":"","company":"Softsensor.ai"},"html":"<p>Researched &#x26; implemented over 20 different image-thresholding techniques for preprocessing WSI patches. Trained Deep Learning Models for segmenting tumors, counting lymphocytes, &#x26; localizing contours, achieving IOU scores over 90%.</p>"}},{"node":{"frontmatter":{"date":"2020-08-31","title":" Image Denoising & Super Resolution","tech":["Python","Tensorflow 2.0","Keras","OpenCV","Matplotlib"],"github":"https://github.com/namandangi/Computer-Vision","external":"","ios":"","android":"","company":""},"html":"<p>Removed statistical interference &#x26; obtained higher resolution output images from lower resolution source images by leveraging efficient data encoding in an unsupervised manner.</p>"}},{"node":{"frontmatter":{"date":"2020-08-31","title":"Non-Photorealistic Stylizing and Synthetic Image Generation","tech":["Python","Tensorflow 2.0","Keras","Matplotlib"],"github":"https://github.com/namandangi/Computer-Vision","external":"","ios":"","android":"","company":""},"html":"<p>Generated Synthetic images using Adversarial networks &#x26; optimized content images with reference style images to obtain blended outputs, which looks like the content images but are painted in style of a reference images.</p>"}}]}},"pageContext":{}},"staticQueryHashes":["1994492073","3391063840","3618961439","4112399270","604461682"]}